# Where the statistics cache for all Wikipedias will be written to. It's best to
# supply an absolute path here – relative paths will be interpreted with regard
# to the current working directory when running the bot. If you're only going to
# ever run the bot from a given, known working directory, feel free to ignore
# this advice.
cacheFile: stats.json

# How noisy the output should be.
# 0: Silent if things run smoothly but noisy if they don't, great when
#    running as a cronjob.
# 1: Normal. Status messages.
# 2: Verbose. Status messages and very verbose intermediate results, handy
#    for debugging.
verbosity: 2

# Where the bot will log its progress. Logging is always done at maximum
# verbosity – you can, however, disable logging by setting and empty value. The
# same absolute vs. relative path caveats as for the cache file apply here.
logFile: bot.log

# Limit the bot's focus to the N largest Wikipedias by articles. (Or, rather, by
# their order on https://meta.wikimedia.org/wiki/List_of_Wikipedias.) At the
# time of writing, there are 313 Wikipedias, so setting this to 999 approximates
# infinity with sufficient headroom.
wikipediaLimit: 999

# Spread requests to the statistics pages of the various Wikipedias over at
# least this many seconds. In my experience, not doing this can lead to rate
# limiting and connection timeouts (although I'm not sure if this is really a
# rate limiting thing or if it was a temprary network weirdness – either way,
# spreading the load across a bit more time is the considerate thing to do).
requestSpread: 120

# The maximim number of tweets the bot will post at a time. Useful to avoid
# exceeding API limits just in case many Wikipedias cross milestones at the same
# time, or if something breaks.
tweetLimit: 10

# Information required for posting to Twitter using its OAuth 1a authentication
# method. Check out the following website for an explanation of how to generate
# these keys/tokens/secrets for your Twitter account:
# https://iag.me/socialmedia/how-to-create-a-twitter-app-in-8-easy-steps/
# Note 1: If any of these four values is left empty, Twitter posting will be
# disabled, but the rest of the program still runs through, which is useful for
# testing (or impatiently waiting for Twitter to approve your dev application).
# Node 2: Instead of filling these values in here, it's recommened to override
# these settings in a production.yaml file located next to this file, and
# running the bot with the NODE_CONFIG_ENV environment variable set to
# "production" (e.g. via "NODE_CONFIG_ENV=production node ."). This is cleaner
# than entering your Twitter authentication data into a file tracked by Git.
twitter:
  consumerKey:
  consumerSecret:
  accessTokenKey:
  accessTokenSecret:
